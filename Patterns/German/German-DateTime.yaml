---
TillRegex: !simpleRegex
  def: (?<till>zu|bis\s*zum|zum|bis|bis\s*hin(\s*zum)?|--|-|—|——)
RangeConnectorRegex : !simpleRegex
  def: (?<and>und|--|-|—|——)
RelativeRegex: !simpleRegex
  def: (?<order>nächst(er|en|es|e)|kommend(er|en|es|e)|dies(er|em|en|es|e)|letzt(er|en|es|e)|vergangen(er|en|es|e)|vorherig(er|en|es|e)|vorig(er|en|es|e)|dies(er|en|es|e)|jetzig(er|en|es|e)|nach)
StrictRelativeRegex: !simpleRegex
  def: (?<order>nächst(er|en|es|e)|kommend(er|en|es|e)|dies(er|em|en|es|e)|letzt(er|en|es|e)|vergangen(er|en|es|e)|vorherig(er|en|es|e)|vorig(er|en|es|e)|dies(er|en|es|e)|jetzig(er|en|es|e)|nach)
NextPrefixRegex: !simpleRegex
  def: (nächst(er|en|es|e)|kommend(er|en|es|e))
PastPrefixRegex: !simpleRegex
  def: (letzt(er|en|es|e)|vergangen(er|en|es|e)|vorherig(er|en|es|e)|vorig(er|en|es|e)|vor|nach)
ThisPrefixRegex: !simpleRegex
  def: (dies(er|en|em|es|e)|jetzig(er|en|es|e))
DayRegex: !simpleRegex
  def: ((der|dem|des)\s*)?(?<day>(01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|1|20|21|22|23|24|25|26|27|28|29|2|30|31|3|4|5|6|7|8|9))(\.)?
MonthNumRegex: !simpleRegex
  def: (?<month>01([\.])?|02([\.])?|03([\.])?|04([\.])?|05([\.])?|06([\.])?|07([\.])?|08([\.])?|09([\.])?|10([\.])?|11([\.])?|12([\.])?|1([\.])?|2([\.])?|3([\.])?|4([\.])?|5([\.])?|6([\.])?|7([\.])?|8([\.])?|9([\.])?)\b
MinYearNum: '1500'
MaxYearNum: '2100'
YearRegex: !simpleRegex
  def: (?<year>19\d{2}|20\d{2})
WeekDayRegex: !simpleRegex
  def: (?<weekday>sonntag|montag|dienstag|mittwoch|donnerstag|freitag|samstag|(mo|di|mi|do|fr|sa|so)(\.))
SingleWeekDayRegex: !simpleRegex
  def: (?<weekday>sonntag|montag|dienstag|mittwoch|donnerstag|freitag|samstag|(mo|di|mi|do|fr|sa|so)(\.))
RelativeMonthRegex: !nestedRegex
  def: (?<relmonth>{RelativeRegex}\s+monat(s)?)
  references: [RelativeRegex]
EngMonthRegex: !simpleRegex
  def: ((monat\s*)?(?<month>april|apr\.|august|aug\.|dezember|dez\.|februar|feb\.|januar|jan\.|juli|jul\.|juni|jun\.|märz|mai|november|nov\.|oktober|okt\.|september|sep\.))
MonthSuffixRegex: !nestedRegex
  def: (?<msuf>(im\s*|des\s*)?({RelativeMonthRegex}|{EngMonthRegex}))
  references: [ RelativeMonthRegex, EngMonthRegex ]
DateUnitRegex: !simpleRegex
  def: (?<unit>jahre|jahr|monate|monat|wochen|woche|tage|tag|Tag)(s)?
SimpleCasesRegex: !nestedRegex
  def: ((vom|zwischen)\s+)?({DayRegex})(\s*{MonthSuffixRegex})?\s*{TillRegex}\s*({DayRegex})(\s*{MonthSuffixRegex})?((\s+|\s*,\s*){YearRegex})?
  references: [ DayRegex, TillRegex, MonthSuffixRegex, YearRegex ]
MonthFrontSimpleCasesRegex: !nestedRegex
  def: ((vom|zwischen)\s*)?{MonthSuffixRegex}\s*((vom|zwischen)\s*)?({DayRegex})\s*{TillRegex}\s*({DayRegex})((\s+|\s*,\s*){YearRegex})?
  references: [ MonthSuffixRegex, DayRegex, TillRegex, YearRegex ]
MonthFrontBetweenRegex: !nestedRegex
  def: ({MonthSuffixRegex}\s+(zwischen\s+)({DayRegex})\s*{RangeConnectorRegex}\s*({DayRegex})((\s+|\s*,\s*){YearRegex})?)
  references: [ MonthSuffixRegex, DayRegex, RangeConnectorRegex , YearRegex ]
BetweenRegex: !nestedRegex
  def: ((zwischen\s+)({DayRegex})(\s+{MonthSuffixRegex})?\s*{RangeConnectorRegex}\s*({DayRegex})(\s+{MonthSuffixRegex})((\s+|\s*,\s*){YearRegex})?|(zwischen\s+)({DayRegex})(\s+{MonthSuffixRegex})?\s*{RangeConnectorRegex}\s*({DayRegex})(\s+{MonthSuffixRegex})?((\s+|\s*,\s*){YearRegex})?)
  references: [ DayRegex, RangeConnectorRegex , MonthSuffixRegex, YearRegex ]
MonthWithYear: !nestedRegex
  def: \b((?<month>april|apr\.|august|aug\.|dezember|dez\.|februar|feb\.|januar|jan\.|juli|jul\.|juni|jun\.|märz|mai|november|nov\.|oktober|okt\.|september|sep\.),?(\s+des)?\s+({YearRegex}|(?<order>nächsten|letzten|diesen)\s+jahres))
  references: [ YearRegex ]
OneWordPeriodRegex: !nestedRegex
  def: \b((((im\s+)?monat\s+)?({RelativeRegex}\s*(jahr\s*(im\s*)?)?)?(?<month>april|apr\.|august|aug\.|dezember|dez\.|februar|feb\.|januar|jan\.|juli|jul\.|juni|jun\.|märz|mai|november|nov\.|oktober|okt\.|september|sep\.))|({RelativeRegex}\s+)?(wochenende|woche|monat|jahr)|wochenende|(monat|jahr))\b
  references: [ RelativeRegex ]
MonthNumWithYear: !nestedRegex
  def: ({YearRegex}[/\-\.]{MonthNumRegex})|({MonthNumRegex}[/\-]{YearRegex})
  references: [ YearRegex, MonthNumRegex ]
WeekOfMonthRegex: !nestedRegex
  def: (?<wom>((die|der)\s+)(?<cardinal>erst(er|en|es|e)|1\.|zweit(er|en|es|e)|2\.|dritt(er|en|es|e)|3\.|viert(er|en|es|e)|4\.|fünft(er|en|es|e)|5\.|letzt(er|en|es|e))\s+Woche\s+(des|diesen|im)\s+({MonthSuffixRegex}|monat(s)?))
  references: [ MonthSuffixRegex ]
WeekOfYearRegex: !nestedRegex
  def: (?<woy>((die|der)\s+)?(?<cardinal>(erst(er|en|es|e)|1\.|zweit(er|en|es|e)|2\.|dritt(er|en|es|e)|3\.|viert(er|en|es|e)|4\.|fünft(er|en|es|e)|5\.|letzt(er|en|es|e))\s+Woche\s+(im|diesen|\s+des)?\s+({YearRegex}|{RelativeRegex}\s+jahr(en|es|e)?)))
  references: [ YearRegex, RelativeRegex ]
FollowedDateUnit: !nestedRegex
  def: ^\s*{DateUnitRegex}
  references: [ DateUnitRegex ]
NumberCombinedWithDateUnit: !nestedRegex
  def: \b(?<num>\d+(\.\d*)?){DateUnitRegex}
  references: [ DateUnitRegex ]
QuarterRegex: !nestedRegex
  def: ((das|dem|im|in dem)\s+)?(?<cardinal>erst(en|es|e)|1st|zweit(en|es|e)|2nd|dritt(en|es|e)|3rd|viert(en|es|e)|4th)\s+quartal(\s+(von|des jahres)?|\s*,\s*)?\s+({YearRegex}|{RelativeRegex})
  references: [ YearRegex, RelativeRegex ]
QuarterRegexYearFront: !nestedRegex #Not needed in german
  def: (?!)#({YearRegex}|{RelativeRegex}\s+year)\s+(the\s+)?(?<cardinal>first|1st|second|2nd|third|3rd|fourth|4th)\s+quarter
  references: [ YearRegex, RelativeRegex ]
AllHalfYearRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
SeasonRegex: !nestedRegex
  def: \b(?<season>({RelativeRegex}\s+)?(?<seas>frühling|sommer|herbst|winter)((\s+(von|des jahres)?|\s*,\s*)?\s+({YearRegex}|{RelativeRegex}\s+jahr(e(s)?)?))?)\b
  references: [ YearRegex, RelativeRegex ]
WhichWeekRegex: !simpleRegex
  def: (week)(\s*)(?<number>\d\d|\d|0\d)
WeekOfRegex: !simpleRegex
  def: (die\s+)?(woche)(\s+des)
MonthOfRegex: !simpleRegex
  def: (monat)(\s*)(des)
MonthRegex: !simpleRegex
  def: (?<month>april|apr.|august|aug.|dezember|dez.|februar|feb.|januar|jan.|juli|jul.|juni|jun.|märz|mai|november|nov.|oktober|okt.|september|sep.)
AmDescRegex: !simpleRegex
  def: (am\b|a\.m\.|a m\b|a\. m\.|a\.m\b|a\. m\b|a m\b)
PmDescRegex: !simpleRegex
  def: (pm\b|p\.m\.|p\b|p m\b|p\. m\.|p\.m\b|p\. m\b|p m\b)
#This is a look-behind assertion. Some cases should extract two digits as year like 11/25/16, where 16 means 2016. 
#The assertion determines if not connected with am/pm or hour separator (:), which should be a time.
DateYearRegex: !nestedRegex
  def: (?<year>19\d{2}|20\d{2}|((9\d|0\d|1\d|2\d)(?!(\s*((\:)|{AmDescRegex}|{PmDescRegex})))))
  references: [ DescRegex, AmDescRegex, PmDescRegex ]
OnRegex: !nestedRegex
  def: (?<=\bam\s+)({DayRegex}s?)\b
  references: [ DayRegex ]
RelaxedOnRegex: !simpleRegex
  def: (?<=\b(am|an dem)\s+)((?<day>10|11|12|13|14|15|16|17|18|19|1|20|21|22|23|24|25|26|27|28|29|2|30|31|3|4|5|6|7|8|9)([\.]))
ThisRegex: !nestedRegex
  def: (((diese((n|m)|(\s*Woche))(\s*am)?\s+){WeekDayRegex})|({WeekDayRegex})|diese(n|r)?\s*(sommer|winter|frühling|herbst))
  references: [ WeekDayRegex ]
LastDateRegex: !nestedRegex
  def: ({LastPrefixRegex}(\s*(woche|monat|jahr)?(\s*(am|im))?)?\s+({WeekDayRegex}|sommer|winter|frühling|herbst))|((am\s+)?{WeekDayRegex}(\s+{LastPrefixRegex}\s*woche))
  references: [ PastPrefixRegex, WeekDayRegex ]
NextDateRegex: !nestedRegex
  def: ({NextPrefixRegex}(\s*(woche|monat|jahr)?(\s*(am|im))?)?\s+({WeekDayRegex}|sommer|winter|frühling|herbst))|((am\s+)?{WeekDayRegex}(\s+{NextPrefixRegex}\s*woche))
  references: [ NextPrefixRegex, WeekDayRegex ]
SpecialDayRegex: !nestedRegex
  def: (vorgestern|übermorgen|((der\s+)?{RelativeRegex}\s+tag)|gestern|morgen|heute)
  references: [ RelativeRegex]
SpecialDayWithNumRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
RelativeDayRegex: !nestedRegex
  def: ((((der|dem|den|des)\s+)?{RelativeRegex}\s+tag(e(s)?)?))
  references: [ RelativeRegex]
SetWeekDayRegex: !simpleRegex
  def: \b(?<prefix>(am|an dem|in der)\s+)?(?<weekday>morgen|nachmittag|abend|nacht|sonntag|montag|dienstag|mittwoch|donnerstag|freitag|samstag)(s)?\b
WeekDayOfMonthRegex: !nestedRegex
  def: \b(?<wom>((dem|der|des|am|an dem)\s+)?(?<cardinal>erst(er|en|e)|1.|zweit(er|en|e)|2.|dritt(er|en|e)|3.|viert(er|en|e)|4.|fünft(er|en|e)|5.|letzt(er|en|e))\s+{WeekDayRegex}\s+{MonthSuffixRegex})\b
  references: [ WeekDayRegex, MonthSuffixRegex ]
SpecialDate: !nestedRegex
  def: (?=\b(an|am|an dem)\s+){DayRegex}\b
  references: [ DayRegex ]
DateExtractor1: !nestedRegex
  def: \b(({WeekDayRegex})(\s+|\s*,\s*))?({DayRegex})((\s*){MonthRegex})((\s+|\s*,\s*)({DateYearRegex}))?\b
  references: [ WeekDayRegex, MonthRegex, DayRegex, DateYearRegex ]
DateExtractor2: !nestedRegex
  def: \b({DayRegex}((\s*){MonthRegex})((\,\s*|\s*){DateYearRegex})?)\b
  references: [ WeekDayRegex, MonthRegex, DayRegex, DateYearRegex ]
DateExtractor3: !nestedRegex
  def: \b({DayRegex}{MonthRegex})
  references: [ WeekDayRegex, DayRegex, MonthRegex, DateYearRegex ]
DateExtractor4: !nestedRegex
  def: \b({DayRegex}\s*{MonthNumRegex}\s*{DateYearRegex})\b
  references: [ MonthNumRegex, DayRegex, DateYearRegex ]
DateExtractor5: !nestedRegex
  def: \b({DayRegex}\s*[/\\\-]\s*{MonthNumRegex}\s*[/\\\-]\s*{DateYearRegex})\b
  references: [ DayRegex, MonthNumRegex, DateYearRegex ]
DateExtractor6: !nestedRegex
  def: \b(({WeekDayRegex}\s*)?(in)\s*(\d(\d)?)\s*(woche(n)?))\b
  references: [ WeekDayRegex ]
DateExtractor7: !nestedRegex
  def: ({DayRegex}\s*[\.]\s*{MonthNumRegex}[\.]\s*)
  references: [ MonthNumRegex, DayRegex, DateYearRegex ]
DateExtractor8: !nestedRegex
  def: (?<=\b(am)\s+){DayRegex}[/\\\.]{MonthNumRegex}[/\\\.]({DateYearRegex})?\b
  references: [ DayRegex, MonthNumRegex ]
DateExtractor9: !nestedRegex
  def: \b({DayRegex}\s*/\s*{MonthNumRegex}((\s+|\s*,\s*){DateYearRegex})?)\b
  references: [ DayRegex, MonthNumRegex, DateYearRegex ]
DateExtractor10: !nestedRegex
  def: \b({RelativeRegex}\s*jahr(\s*im)?({MonthNumRegex}|sommer|winter|frühling|herbst)?)\b
  references: [ DayRegex, MonthNumRegex, DateYearRegex, RelativeRegex ]
DateExtractorA: !nestedRegex
  def: ({DateYearRegex}\s*[/\\\-]\s*{MonthNumRegex}\s*[/\\\-]\s*{DayRegex})
  references: [ DateYearRegex, MonthNumRegex, DayRegex ]
OfMonth: !nestedRegex
  def: ^(\s*des\s*|\s*)?{MonthRegex}
  references: [ MonthRegex ]
MonthEnd: !nestedRegex
  def: '{MonthRegex}\s*(der|dem|den)?\s*$'
  references: [ MonthRegex ]
WeekDayEnd: !nestedRegex
  def: '{WeekDayRegex}\s*,?\s*$'
  references: [ WeekDayRegex ]
RangeUnitRegex: !simpleRegex
  def: (?<unit>jahren|jahre|jahr|monaten|monate|monat|wochen|woche|tagen|tage|tag)
OclockRegex: !simpleRegex
  def: (?<oclock>Uhr)
DescRegex: !nestedRegex
  def: ({OclockRegex})
  references: [ OclockRegex ]
HourNumRegex: !simpleRegex
  def: \b(?<hournum>'null'|ein|eins|zwei|drei|vier|fünf|fuenf|sechs|sieben|acht|neun|zehn|elf|zwölf|zwoelf|dreizehn|vierzehn|fünfzehn|sechzehn|siebzehn|achtzehn|neunzehn|zwanzig|einundzwanzig|zweiundzwanzig|dreiundzwanzig|vierundzwanzig)\b
MinuteNumRegex: !simpleRegex
  def: (?<minnum>zwanzig|dreißig|vierzig|fünfzig|ein|eins|zwei|drei|vier|fünf|fuenf|sechs|sieben|acht|neun|zehn|elf|zwölf|zwoelf|dreizehn|vierzehn|fünfzehn|fuenfzehn|sechzehn|siebzehn|achtzehn|neunzehn)
DeltaMinuteNumRegex: !simpleRegex
  def: (?<deltaminnum>zwanzig|dreißig|vierzig|fünfzig|ein|eins|zwei|drei|vier|fünf|fuenf|sechs|sieben|acht|neun|zehn|elf|zwölf|zwoelf|dreizehn|vierzehn|fünfzehn|fuenfzehn|sechzehn|siebzehn|achtzehn|neunzehn)
PmRegex: !simpleRegex
  def: ((((am|gegen|in der)\s+)?(?<pm>nachmittag(s)?|abend(s)?|mitternacht(s)?|mittag(s)?))|((in der)?\s*nacht(s)?))
PmRegexFull: !simpleRegex
  def: ((((am|gegen|in der)\s+)?(?<pm>nachmittag(s)?|abend(s)?|mitternacht(s)?|mittag(s)?))|((in der)?\s*nacht(s)?))
AmRegex: !simpleRegex
  def: (?<am>((am|gegen)\s+)?(morgen(s)?|vormittag(s)?))
LunchRegex: !simpleRegex
  def: \b(mittag(s)?|mittagessen)\b
NightRegex: !simpleRegex
  def: \b(mitternacht|nacht(s)?)\b
AmPmPrefixRegex: !simpleRegex
  def: ((((um|gegen)\s*)?(morgen(s)?|vormittag(s)?|mittag(s)?|nachmittag(s)?|abend(s)?|mitternacht(s)?)|(in der\s*)?nacht(s)?)\s*(um|gegen|von)\s*)
CommonDatePrefixRegex: !simpleRegex
  def: ^[\.]
LessThanOneHour: !nestedRegex
  def: (?<lth>(eine(r)?\s+)?(viertel|dreiviertel|halb(en|e)?)(\s+Stunde(n)?)?)|{BaseDateTime.DeltaMinuteRegex}(\s+(minute|minuten|min))|{DeltaMinuteNumRegex}(\s+(minute|minuten|min))
  references: [ BaseDateTime.DeltaMinuteRegex, DeltaMinuteNumRegex ]
EngTimeRegex: !nestedRegex
  def: (um\s*)?(?<engtime>{HourNumRegex}(\s*{OclockRegex}\s*)({MinuteNumRegex}|{MinuteNumRegex}und(?<tens>zwanzig|dreißig|vierzig|fünfzig)))
  references: [ HourNumRegex, MinuteNumRegex , OclockRegex]
TimePrefix: !nestedRegex
  def: (?<prefix>(um\s*)?({LessThanOneHour})(\s*(vor|nach))?)
  references: [ LessThanOneHour ]
TimeSuffix: !nestedRegex
  def: (?<suffix>{AmRegex}|{PmRegex}|{OclockRegex})
  references: [ AmRegex, PmRegex, OclockRegex ]
TimeSuffixFull: !nestedRegex
  def: (?<suffix>{AmRegex}|{PmRegex}|{OclockRegex}|(?<pm>nachmittag(s)?|nacht(s)?|abend(s)?))
  references: [ AmRegex, PmRegexFull, OclockRegex ]
BasicTime: !nestedRegex
  def: (?<basictime>{EngTimeRegex}|{HourNumRegex}|{BaseDateTime.HourRegex}:{BaseDateTime.MinuteRegex}(:{BaseDateTime.SecondRegex})?|{BaseDateTime.HourRegex})
  references: [ EngTimeRegex, HourNumRegex, BaseDateTime.HourRegex, BaseDateTime.MinuteRegex, BaseDateTime.SecondRegex ]
MidnightRegex: !simpleRegex
  def: (?<midnight>mitternacht|mitten in der nacht)
MidmorningRegex: !simpleRegex
  def: (?<midmorning>vormittag|vormittags)
MidafternoonRegex: !simpleRegex
  def: ^[\.]
MiddayRegex: !simpleRegex
  def: (?<midday>mittag|mittags)
MidTimeRegex: !nestedRegex
  def: (?<mid>({MidnightRegex}|{MidmorningRegex}|{MidafternoonRegex}|{MiddayRegex}))
  references: [ MidnightRegex, MidmorningRegex, MidafternoonRegex, MiddayRegex ]
AtRegex: !nestedRegex
  def: \b(((?<=\b(um|gegen)\s+)({EngTimeRegex}|{HourNumRegex}|{BaseDateTime.HourRegex}|{MidTimeRegex}))|{MidTimeRegex})\b
  references: [ EngTimeRegex, HourNumRegex, BaseDateTime.HourRegex, MidTimeRegex ]
IshRegex: !nestedRegex
  def: '\b({BaseDateTime.HourRegex}(-|——)?ish|noonish|noon)\b'
  references: [ BaseDateTime.HourRegex ]
TimeUnitRegex: !simpleRegex
  def: (?<unit>stunden|stunde|std|minuten|minute|min|sekunden|sekunde|sek|s)
RestrictedTimeUnitRegex: !simpleRegex
  def: (?<unit>stunde|minute)\b
FivesRegex: !simpleRegex
  def: (?<tens>(fünfzehn|(fünfund)?zwanzig?|(fünfund)?dreißig|(fünfund)?vierzig|(fünfund)?fünfzig|zehn|fünf))\b
HourRegex: !simpleRegex
  def: (?<hour>00|01|02|03|04|05|06|07|08|09|0|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|1|2|3|4|5|6|7|8|9)
PeriodHourNumRegex: !simpleRegex
  def: (?<hour>einundzwanzig|zweiundzwanzig|dreiundzwanzig|vierundzwanzig|'null'|ein(s)?|zwei|drei|vier|fünf|sechs|sieben|acht|neun|zehn|elf|zwölf|dreizehn|vierzehn|fünfzehn|sechzehn|siebzehn|achtzehn|neunzehn|zwanzig)\b
ConnectNumRegex: !nestedRegex
  def: '{BaseDateTime.HourRegex}(?<min>00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31|32|33|34|35|36|37|38|39|40|41|42|43|44|45|46|47|48|49|50|51|52|53|54|55|56|57|58|59)\s*{DescRegex}'
  references: [ BaseDateTime.HourRegex, DescRegex ]
TimeRegex1: !nestedRegex
  def: ({TimePrefix}\s+)?({EngTimeRegex}|{HourNumRegex}|{BaseDateTime.HourRegex})\s*{DescRegex}
  references: [ TimePrefix, EngTimeRegex, HourNumRegex, BaseDateTime.HourRegex, DescRegex ]
TimeRegex2: !nestedRegex
  def: ({TimePrefix}\s+)?(T)?{BaseDateTime.HourRegex}(\s*)?:(\s*)?{BaseDateTime.MinuteRegex}((\s*)?:(\s*)?{BaseDateTime.SecondRegex})?((\s*{DescRegex})|\b)
  references: [ TimePrefix, BaseDateTime.HourRegex, BaseDateTime.MinuteRegex, BaseDateTime.SecondRegex, DescRegex ]
TimeRegex3: !nestedRegex
  def: ({TimePrefix}\s+)?{BaseDateTime.HourRegex}\.{BaseDateTime.MinuteRegex}(\s*{DescRegex})
  references: [ TimePrefix, BaseDateTime.HourRegex, BaseDateTime.MinuteRegex, DescRegex ]
TimeRegex4: !nestedRegex
  def: ({TimePrefix}\s*{BasicTime}(\s*{DescRegex})?(\s*{TimeSuffix})?)
  references: [ TimePrefix, BasicTime, DescRegex, TimeSuffix ]
TimeRegex5: !nestedRegex
  def: ({TimePrefix}\s*{BasicTime}((\s*{DescRegex})))
  references: [ TimePrefix, BasicTime, DescRegex ]
TimeRegex6: !nestedRegex
  def: ({BasicTime}(\s*{DescRegex})?\s+{TimeSuffix})
  references: [ BasicTime, DescRegex, TimeSuffix ]
TimeRegex7: !nestedRegex
  def: (({AmPmPrefixRegex})?({BasicTime})((\s*{DescRegex}))?)
  references: [ TimeSuffixFull, BasicTime, DescRegex, AmPmPrefixRegex ]
TimeRegex8: !nestedRegex
  def: ({TimeSuffixFull}(\s*(um|gegen)\s*){BasicTime}((\s*{DescRegex})?))
  references: [ TimeSuffixFull, BasicTime, DescRegex ]
TimeRegex9: !nestedRegex
  def: ({PeriodHourNumRegex}\s+{FivesRegex}((\s*{DescRegex})))
  references: [ PeriodHourNumRegex, FivesRegex, DescRegex ]
PureNumFromTo: !nestedRegex
  def: ((von|vom|zwischen)\s+)?({HourRegex}|{PeriodHourNumRegex})(\s*(?<leftDesc>{DescRegex}))?\s*{TillRegex}\s*({HourRegex}|{PeriodHourNumRegex})\s*(?<rightDesc>{PmRegex}|{AmRegex}|{DescRegex})?
  references: [ HourRegex, PeriodHourNumRegex, DescRegex, TillRegex, PmRegex, AmRegex ]
PureNumBetweenAnd: !nestedRegex
  def: \b(zwischen\s+)({HourRegex}|{PeriodHourNumRegex})(\s*(?<leftDesc>{DescRegex}))?\s*{RangeConnectorRegex}\s*({HourRegex}|{PeriodHourNumRegex})\s*(?<rightDesc>{PmRegex}|{AmRegex}|{DescRegex})?\b
  references: [ HourRegex, PeriodHourNumRegex, DescRegex, PmRegex, AmRegex, RangeConnectorRegex ]
PrepositionRegex: !simpleRegex
  def: (?<prep>^(um|am|vom|von|in)(\s+(der|dem|den))?$)
TimeOfDayRegex: !simpleRegex
  def: \b(?<timeOfDay>(((((?<early>(früh am|am frühen|früher)(\s+|-))|(?<late>(spät am|am späten|später)(\s+|-)))?(morgen(s)?|vormittag(s)?|mittag(s)?|nachmittag(s)?|abend(s)?|nacht(s)?)))))\b
SpecificTimeOfDayRegex: !nestedRegex
  def: \b(({StrictRelativeRegex}\s+{TimeOfDayRegex})\b|\bheute)s?\b
  references: [ TimeOfDayRegex, StrictRelativeRegex ]
TimeFollowedUnit: !nestedRegex
  def: ^\s*{TimeUnitRegex}$
  references: [ TimeUnitRegex ]
TimeNumberCombinedWithUnit: !nestedRegex
  def: (?<num>\d+(\,\d*)?){TimeUnitRegex}
  references: [ TimeUnitRegex ]
NowRegex: !simpleRegex
  def: \b(?<now>(genau\s+)?jetzt|so früh wie möglich|frühestmöglich|neulich|vorher)\b
SuffixRegex: !simpleRegex
  def: ^\s*((am|in der)\s+)?(morgen|morgens|frühe|vormittag|vormittags|mittag|mittags|nachmittag|nachmittags|abend|abends|nacht|nachts)\b
DateTimeTimeOfDayRegex: !simpleRegex
  def: \b(?<timeOfDay>morgen(s)?|vormittag(s)?|mittag(s)?|nachmittag(s)?|nacht(s)?|abend(s)?)\b
DateTimeSpecificTimeOfDayRegex: !nestedRegex
  def: \b(({RelativeRegex}\s+{DateTimeTimeOfDayRegex})\b|\bheute)\b
  references: [ DateTimeTimeOfDayRegex, RelativeRegex ]
TimeOfTodayAfterRegex: !nestedRegex
  def: ^\s*(,\s*)?((am|in der)\s+)?{DateTimeSpecificTimeOfDayRegex}
  references: [ DateTimeSpecificTimeOfDayRegex ]
TimeOfTodayBeforeRegex: !nestedRegex
  def: '{DateTimeSpecificTimeOfDayRegex}(\s*,)?(\s+(um|gegen|in|on))?\s*$'
  references: [ DateTimeSpecificTimeOfDayRegex ]
SimpleTimeOfTodayAfterRegex: !nestedRegex
  def: ({HourNumRegex}|{BaseDateTime.HourRegex})\s*(,\s*)?(am\s+)?{DateTimeSpecificTimeOfDayRegex}
  references: [ HourNumRegex, BaseDateTime.HourRegex, DateTimeSpecificTimeOfDayRegex ]
SimpleTimeOfTodayBeforeRegex: !nestedRegex
  def: '{DateTimeSpecificTimeOfDayRegex}(\s*,)?(\s+um)?\s*({HourNumRegex}|{BaseDateTime.HourRegex})'
  references: [ DateTimeSpecificTimeOfDayRegex, HourNumRegex, BaseDateTime.HourRegex ]
TheEndOfRegex: !simpleRegex
  def: ((das|am|dem|an dem)\s+)?ende(\s+(dem|den|des|der)?)\s*
PeriodTimeOfDayRegex: !simpleRegex
  def: \b(((?<early>(früh am|früher|am frühen)(\s+|-))|(?<late>(spät am|später|am späten)(\s+|-)))?(?<timeOfDay>morgen(s)?|vormittag(s)?|mittag(s)?|nachmittag(s)?|nacht(s)?|abend(s)?))\b
PeriodSpecificTimeOfDayRegex: !nestedRegex
  def: (({StrictRelativeRegex}\s+{PeriodTimeOfDayRegex})|heute)
  references: [ PeriodTimeOfDayRegex, StrictRelativeRegex ]
PeriodTimeOfDayWithDateRegex: !nestedRegex
 def: \b((((am|von|in der)\s+)?{TimeOfDayRegex}(\s+am)?))\b
 references: [ TimeOfDayRegex]
DurationUnitRegex: !simpleRegex
  def: (?<unit>jahr(en|es|e)?|monat(en|e|s)?|woche(n)?|tag(en|es|e)?|stund(en|e)?|std|minute(n)?|min|sekunde(n)?|sek)\b
SuffixAndRegex: !simpleRegex
  def: (?<suffix>\s*(und)\s+((eine)\s+)?(?<suffix_num>halbe|viertel))
PeriodicRegex: !simpleRegex
  def: (?<periodic>(all)?täglich(er|en|es|e)?|(all)?monatlich(er|en|es|e)?|(all)?wöchentlich(er|en|es|e)?|(all)?jährlich(er|en|es|e)?)\b
EachUnitRegex: !nestedRegex
  def: (?<each>(jede(s|r|n|m)?|alle)(?<other>\s+andere(n)?)?\s*{DurationUnitRegex})
  references: [ DurationUnitRegex ]
EachPrefixRegex: !simpleRegex
  def: \b(?<each>(jede(r|n|s)?|alle)\s*$)
SetEachRegex: !simpleRegex
  def: \b(?<each>(jede(r|n|s)?|alle)\s*)
SetLastRegex: !simpleRegex
  def: (?<last>nächste(r|n|s)?|kommende(r|n|s)?|diese(r|n|m|s)?|letzte(r|n|s)?|vorige(r|n|s)?|vorherige(r|n|s)?|jetzige(r|n|s)?|derzeitige(r|n|s)?)\b
EachDayRegex: !simpleRegex
  def: (\s*(jeden)\s*(Tag|tag)\s*)
DurationFollowedUnit: !nestedRegex
  def: \s*{SuffixAndRegex}?(\s+|-)?{DurationUnitRegex}
  references: [ SuffixAndRegex, DurationUnitRegex ]
NumberCombinedWithDurationUnit: !nestedRegex
  def: \b(?<num>\d+(\.\d*)?)(-)?{DurationUnitRegex}
  references: [ DurationUnitRegex ]
AnUnitRegex: !nestedRegex
  def: \b(((ein(er|es|en|em|e)?)(?<half>\s+halb(es|er|en|e))?))\s+{DurationUnitRegex}
  references: [ DurationUnitRegex ]
AllRegex: !simpleRegex
  def: \b(?<all>ganz(en|es|er|e)\s+(?<unit>jahr|monat|woche|tag))\b
HalfRegex: !simpleRegex
  def: (((ein(en|er|es|e)?)\s*)|\b)(?<half>halb(en|er|es|e)?\s+(?<unit>jahr(er|es|e)?|monat(s|e)?|woch(en|e)?|tag(en|er|es|e)?|stund(en|e)?))\b
ConjunctionRegex: !simpleRegex
  def: \b((und(\s+für)?)|mit|für)\b
HolidayRegex1: !nestedRegex
  def: \b((dieses Jahr)\s*)?(?<holiday>clean monday|good friday|ash wednesday|mardi gras|washington's birthday|mao's birthday|chinese new Year|neujahr|neujahrstag|vatertag|mayday|yuan dan|erster april|heiligabend|weihnachten|weihnachtstag|erntedankfest|halloween|yuandan|ostern|osterfest)(\s+((diesen)\s+)?({YearRegex}|{RelativeRegex}\s+jahres))?\b
  references: [ YearRegex, RelativeRegex ]
HolidayRegex2: !nestedRegex
  def: \b((dieses Jahr)\s*)?(?<holiday>martin luther king|martin luther king jr|allerheiligen|tree planting day|white lover|st patrick|st george|cinco de mayo|independence|us independence|allerheiligen|allerseelen|guy fawkes|silvester)(\s+((diesen)\s+)?({YearRegex}|{RelativeRegex}\s+jahres))?\b
  references: [ YearRegex, RelativeRegex ]
HolidayRegex3: !nestedRegex
  def: ((dieses Jahr)\s*)?(?<holiday>(canberra|ostern|columbus|thanks\s*giving|weihnachten|weihnachtstag|tag der arbeit|muttertag|vatertag|female|single|teacher's|youth|children|arbor|girls|chsmilbuild|lover|labor|inauguration|groundhog|valentine's|baptiste|bastille|halloween|veterans|memorial|mid(-| )autumn|moon|spring|lantern|qingming|dragon boat|new years'|new year's|new year 's|new years|new year)\s+(day))(\s+((diesen)\s+)?({YearRegex}|{RelativeRegex}\s+jahres))?
  references: [ YearRegex, RelativeRegex ]
DateTokenPrefix: 'am '
TimeTokenPrefix: 'um '
TokenBeforeDate: 'am '
TokenBeforeTime: 'um '
AMTimeRegex: !simpleRegex
  def: (?<am>morgen(s)?|vormittag(s)?)
PMTimeRegex: !simpleRegex
  def: (?<pm>nachmittag(s)?|abend(s)?|nacht(s)?)
BeforeRegex: !simpleRegex
  def: (vorher(ige(s|n|r)?)?|bevor|vor|vorige(s|n|r)?)
AfterRegex: !simpleRegex
  def: (nach)
SinceRegex: !simpleRegex
  def: \b(seit)\b
AgoRegex: !simpleRegex
  def: \b(ago)\b
LaterRegex: !simpleRegex
  def: \b(später|von jetzt an)\b
InConnectorRegex: !simpleRegex
  def: \b(in)\b
WithinNextPrefixRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
AmPmDescRegex: !simpleRegex
  def: (ampm)
MorningStartEndRegex: !simpleRegex
  def: (^(morgen(s)?))|((morgen(s)?)$)
AfternoonStartEndRegex: !simpleRegex
  def: (^(nachmittag(s)?))|((nachmittag(s)?)$)
EveningStartEndRegex: !simpleRegex
  def: (^(abend(s)?))|((abend(s)?)$)
NightStartEndRegex: !simpleRegex
  def: (^(über nacht|heute nacht|nacht(s)?|nächtens|in der nacht))|((über nacht|heute nacht|nacht(s)?|nächtens)$)
InexactNumberRegex: !simpleRegex
  def: \b((ein )?paar|einige|wenige|einige wenige)\b
InexactNumberUnitRegex: !nestedRegex
  def: ({InexactNumberRegex})\s+({DurationUnitRegex})
  references: [InexactNumberRegex, DurationUnitRegex]
RelativeTimeUnitRegex: !nestedRegex
  def: ((({NextPrefixRegex}|{PastPrefixRegex}|{ThisPrefixRegex})\s*({TimeUnitRegex})))
  references: [NextPrefixRegex, PastPrefixRegex, ThisPrefixRegex, TimeUnitRegex, RestrictedTimeUnitRegex]
RelativeDurationUnitRegex: !nestedRegex
  def: (((?<=({NextPrefixRegex}|{PastPrefixRegex}|{ThisPrefixRegex})\s*)({DurationUnitRegex})))
  references: [NextPrefixRegex, PastPrefixRegex, ThisPrefixRegex, DurationUnitRegex, RestrictedTimeUnitRegex]
ConnectorRegex: !simpleRegex
  def: ^(-|,|für|t|gegen)$
FromToRegex: !simpleRegex
  def: \b(vom|von).+(bis(\s*zum)?)\b.+
SingleAmbiguousMonthRegex: !simpleRegex
  def: ^(the\s+)?(may|march)$
PrepositionSuffixRegex: !simpleRegex
  def: \b(am|in|um|gegen|von|vom|zum)$
FlexibleDayRegex: !simpleRegex
  def: (?<DayOfMonth>([A-Za-z]+\s)?[A-Za-z\d]+)
ForTheRegex: !nestedRegex
  def: \b(für den {FlexibleDayRegex})
  references: [FlexibleDayRegex]
WeekDayAndDayOfMonthRegex: !nestedRegex
  def: \b{WeekDayRegex}\s+((der|den)\s+{FlexibleDayRegex})\b
  references: [WeekDayRegex, FlexibleDayRegex]
RestOfDateRegex: !simpleRegex
  def: \bRest\s+((der|des|dieser)\s+)((aktuellen|jetzigen)\s+)?(?<duration>Woche|Monats|Jahres)\b
RestOfDateTimeRegex: !simpleRegex
  def: \bRest\s+((des|diesen)\s+)((aktuellen|heutigen)\s+)?(?<unit>Tages)\b
MealTimeRegex: !simpleRegex
  def: \b((zum|zur)\s+)?(?<mealTime>(essenszeit|mittagessen))\b
NumberEndingPattern: !nestedRegex
  def: ^(\s+(?<meeting>meeting|appointment|conference|call|skype call)\s+to\s+(?<newTime>{PeriodHourNumRegex}|{HourRegex})((\.)?$|(\.,|,|!|\?)))
  references: [PeriodHourNumRegex, HourRegex]
OneOnOneRegex: !simpleRegex
  def: \b(1\s*:\s*1)|(one (on )?one|one\s*-\s*one|one\s*:\s*one)\b
LaterEarlyPeriodRegex: !nestedRegex
  def: \b((?<LatePrefix>spät(er|en|e)?)|(?<EarlyPrefix>früh(er|en|e)))\s+(?<suffix>{OneWordPeriodRegex})\b
  references: [OneWordPeriodRegex]
WeekWithWeekDayRangeRegex: !nestedRegex
  def: \b((?<week>({NextPrefixRegex}|{PastPrefixRegex}|diese(r|n|m))\s+woche)((\s+zwischen\s+{WeekDayRegex}\s+und\s+{WeekDayRegex})|(\s+vo(n|m)\s+{WeekDayRegex}\s+(bis\s+)?zum\s+{WeekDayRegex})))\b
  references: [NextPrefixRegex, PastPrefixRegex, WeekDayRegex]
GeneralEndingRegex: !simpleRegex
  def: \s*((\.,)|\.|,|!|\?)?\s*
MiddlePauseRegex: !simpleRegex
  def: \s*(,)\s*
DurationConnectorRegex: !simpleRegex
  def: ^\s*(?<connector>\s+|und|für|,)\s*$
PrefixArticleRegex: !simpleRegex
  def: \b(der|dem|des)?\s+
OrRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
YearPlusNumberRegex: !simpleRegex
  def: \b(Jahr\s+(?<number>(\d{3,4})))\b
NumberAsTimeRegex: !nestedRegex
  def: \b({EngTimeRegex}|{PeriodHourNumRegex}|{BaseDateTime.HourRegex})\b
  references: [ EngTimeRegex, PeriodHourNumRegex, BaseDateTime.HourRegex ]
TimeBeforeAfterRegex: !nestedRegex
  def: \b(((?<=\b(vor|nach)\s+)({EngTimeRegex}|{HourNumRegex}|{BaseDateTime.HourRegex}|{MidTimeRegex}))|{MidTimeRegex})\b
  references: [ EngTimeRegex, HourNumRegex, BaseDateTime.HourRegex, MidTimeRegex ]
DateNumberConnectorRegex: !simpleRegex
  def: \s*(?<connector>am)\s*
CenturyRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
DecadeRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: (?<decade>zwanziger|dreißiger|vierziger|fünfziger|sechziger|siebziger|achtziger|neunziger|zweitausender)(n)?
DecadeWithCenturyRegex: !nestedRegex
  def: (the\s+)?(((?<century>\d|1\d|2\d)?(')?(?<decade>\d0)(')?s)|(({CenturyRegex}(\s+|-)(and\s+)?)?{DecadeRegex})|({CenturyRegex}(\s+|-)(and\s+)?(?<decade>tens|hundreds)))
  references: [ CenturyRegex, DecadeRegex ]
RelativeDecadeRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
FullTextYearRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
YearSuffix: !nestedRegex
  def: (,?\s*({DateYearRegex}|{FullTextYearRegex}))
  references: [ DateYearRegex, FullTextYearRegex ]
YearAfterRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
YearPeriodRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: (für|über)\s*(\d\s*)(Jahr(en|e)?)
FutureSuffixRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
UnitMap: !dictionary
  types: [ string, string ]
  entries:
    jahren: Y
    jahres: Y
    jahre: Y
    jahr: Y
    monaten: MON
    monate: MON
    monat: MON
    monats: MON
    wochen: W
    woche: W
    tagen: D
    tages: D
    tage: D
    tag: D
    stunden: H
    stunde: H
    h: H
    minuten: M
    minute: M
    min: M
    sekunden: S
    sekunde: S
    sek: S
    Jahren: Y
    Jahres: Y
    Jahre: Y
    Jahr: Y
    Monaten: MON
    Monate: MON
    Monat: MON
    Monats: MON
    Wochen: W
    Woche: W
    Tagen: D
    Tages: D
    Tage: D
    Tag: D
    Stunden: H
    Stunde: H
    H: H
    Minuten: M
    Minute: M
    Min: M
    Sekunden: S
    sekunde: S
    Sek: S
UnitValueMap: !dictionary
  types: [ string, long ]
  entries:
    jahren: 31536000
    jahre: 31536000
    jahr: 31536000
    Jahren: 31536000
    Jahre: 31536000
    Jahr: 31536000
    monaten: 2592000
    monate: 2592000
    monat: 2592000
    Monaten: 2592000
    Monate: 2592000
    Monat: 2592000
    wochen: 604800
    woche: 604800
    Wochen: 604800
    Woche: 604800
    tagen: 86400
    tage: 86400
    tag: 86400
    Tagen: 86400
    Tage: 86400
    Tag: 86400
    stunden: 3600
    stunde: 3600
    std: 3600
    Stunden: 3600
    Stunde: 3600
    Std: 3600
    minuten: 60
    minute: 60
    min: 60
    Minuten: 60
    Minute: 60
    Min: 60
    sekunden: 1
    sekunde: 1
    sek: 1
    Sekunden: 1
    Sekunde: 1
    Sek: 1
SeasonMap: !dictionary
  types: [ string, string ]
  entries:
    spring: SP
    summer: SU
    fall: FA
    autumn: FA
    winter: WI
SeasonValueMap: !dictionary
  types: [ string, int ]
  entries:
    SP: 3
    SU: 6
    FA: 9
    WI: 12
CardinalMap: !dictionary
  types: [ string, int]
  entries:
    erster: 1
    ersten: 1
    erstes: 1
    erste: 1
    1: 1
    zweiter: 2
    zweiten: 2
    zweites: 2
    zweite: 2
    2: 2
    dritter: 3
    dritten: 3
    drittes: 3
    dritte: 3
    3: 3
    vierter: 4
    vierten: 4
    viertes: 4
    vierte: 4
    4: 4
    fünfter: 5
    fünften: 5
    fünftes: 5
    fünfte: 5
    5: 5
DayOfWeek: !dictionary
  types: [ string, int ]
  entries: 
    montag: 1
    dienstag: 2
    mittwoch: 3
    donnerstag: 4
    freitag: 5
    samstag: 6
    sonntag: 0
    mo.: 1
    di.: 2
    mi.: 3
    do.: 4
    fr.: 5
    sa.: 6
    so.: 0
    Montag: 1
    Dienstag: 2
    Mittwoch: 3
    Donnerstag: 4
    Freitag: 5
    Samstag: 6
    Sonntag: 0
    Mo.: 1
    Di.: 2
    Mi.: 3
    Do.: 4
    Fr.: 5
    Sa.: 6
    So.: 0
MonthOfYear: !dictionary
  types: [ string, int ]
  entries:
    'januar': 1
    'februar': 2
    'märz': 3
    'april': 4
    'mai': 5
    'juni': 6
    'juli': 7
    'august': 8
    'september': 9
    'oktober': 10
    'november': 11
    'dezember': 12
    'jan': 1
    'feb': 2
    'mar': 3
    'apr': 4
    'jun': 6
    'jul': 7
    'aug': 8
    'sep': 9
    'okt': 10
    'nov': 11
    'dez': 12
    'Januar': 1
    'Februar': 2
    'März': 3
    'April': 4
    'Mai': 5
    'Juni': 6
    'Juli': 7
    'August': 8
    'September': 9
    'Oktober': 10
    'November': 11
    'Dezember': 12
    'Jan': 1
    'Feb': 2
    'Mar': 3
    'Apr': 4
    'Jun': 6
    'Jul': 7
    'Aug': 8
    'Sep': 9
    'Okt': 10
    'Nov': 11
    'Dez': 12
    '1.': 1
    '2.': 2
    '3.': 3
    '4.': 4
    '5.': 5
    '6.': 6
    '7.': 7
    '8.': 8
    '9.': 9
    '10.': 10
    '11.': 11
    '12.': 12
    '01.': 1
    '02.': 2
    '03.': 3
    '04.': 4
    '05.': 5
    '06.': 6
    '07.': 7
    '08.': 8
    '09.': 9
    '1': 1
    '2': 2
    '3': 3
    '4': 4
    '5': 5
    '6': 6
    '7': 7
    '8': 8
    '9': 9
    '10': 10
    '11': 11
    '12': 12
    '01': 1
    '02': 2
    '03': 3
    '04': 4
    '05': 5
    '06': 6
    '07': 7
    '08': 8
    '09': 9
Numbers: !dictionary
  types: [ string, int ]
  entries:
    'null': 0
    'eins': 1
    'ein': 1
    'eine': 1
    'zwei': 2
    'drei': 3
    'vier': 4
    'fünf': 5
    'fuenf': 5
    'sechs': 6
    'sieben': 7
    'acht': 8
    'neun': 9
    'zehn': 10
    'elf': 11
    'zwölf': 12
    'dreizehn': 13
    'vierzehn': 14
    'fünfzehn': 15
    'sechzehn': 16
    'siebzehn': 17
    'achtzehn': 18
    'neunzehn': 19
    'zwanzig': 20
    'einundzwanzig': 21
    'zweiundzwanzig': 22
    'dreiundzwanzig': 23
    'vierundzwanzig': 24
    'fünfundzwanzig': 25
    'sechsundzwanzig': 26
    'siebenundzwanzig': 27
    'achtundzwanzig': 28
    'neunundzwanzig': 29
    'dreißig': 30
    'einunddreißig': 31
    'zweiunddreißig': 32
    'dreiunddreißig': 33
    'vierunddreißig': 34
    'fünfunddreißig': 35
    'sechsunddreißig': 36
    'siebenunddreißig': 37
    'achtunddreißig': 38
    'neununddreißig': 39
    'vierzig': 40
    'einundvierzig': 41
    'zweiundvierzig': 42
    'dreiundvierzig': 43
    'vierundvierzig': 44
    'fünfundvierzig': 45
    'sechsundvierzig': 46
    'siebenundvierzig': 47
    'achtundvierzig': 48
    'neunundvierzig': 49
    'fünfzig': 50
    'einundfünfzig': 51
    'zweiundfünfzig': 52
    'dreiundfünfzig': 53
    'vierundfünfzig': 54
    'fünfundfünfzig': 55
    'sechsundfünfzig': 56
    'siebenundfünfzig': 57
    'achtundfünfzig': 58
    'neunundfünfzig': 59
    'sechzig': 60
    'einundsechzig': 61
    'zweiundsechzig': 62
    'dreiundsechzig': 63
    'vierundsechzig': 64
    'fünfundsechzig': 65
    'sechsundsechzig': 66
    'siebenundsechzig': 67
    'achtundsechzig': 68
    'neunundsechzig': 69
    'siebzig': 70
    'einundsiebzig': 71
    'zweiundsiebzig': 72
    'dreiundsiebzig': 73
    'vierundsiebzig': 74
    'fünfundsiebzig': 75
    'sechsundsiebzig': 76
    'siebenundsiebzig': 77
    'achtundsiebzig': 78
    'neunundsiebzig': 79
    'achtzig': 80
    'einundachtzig': 81
    'zweiundachtzig': 82
    'dreiundachtzig': 83
    'vierundachtzig': 84
    'fünfundachtzig': 85
    'sechsundachtzig': 86
    'siebenundachtzig': 87
    'achtundachtzig': 88
    'neunundachtzig': 89
    'neunzig': 90
    'einundneunzig': 91
    'zweiundneunzig': 92
    'dreiundneunzig': 93
    'vierundneunzig': 94
    'fünfundneunzig': 95
    'sechsundneunzig': 96
    'siebenundneunzig': 97
    'achtundneunzig': 98
    'neunundneunzig': 99
    'einhundert': 100
DayOfMonth: !dictionary
  types: [ string, int ]
  entries:
    '1. ': 1
    '2. ': 2
    '3. ': 3
    '4. ': 4
    '5. ': 5
    '6. ': 6
    '7. ': 7
    '8. ': 8
    '9. ': 9
    '10. ': 10
    '11. ': 11
    '11. ': 11
    '12. ': 12
    '12. ': 12
    '13. ': 13
    '13. ': 13
    '14. ': 14
    '15. ': 15
    '16. ': 16
    '17. ': 17
    '18. ': 18
    '19. ': 19
    '20. ': 20
    '21. ': 21
    '22. ': 22
    '23. ': 23
    '24. ': 24
    '25. ': 25
    '26. ': 26
    '27. ': 27
    '28. ': 28
    '29. ': 29
    '30. ': 30
    '31. ': 31
    '1': 1
    '2': 2
    '3': 3
    '4': 4
    '5': 5
    '6': 6
    '7': 7
    '8': 8
    '9': 9
    '10': 10
    '11': 11
    '11': 11
    '12': 12
    '12': 12
    '13': 13
    '13': 13
    '14': 14
    '15': 15
    '16': 16
    '17': 17
    '18': 18
    '19': 19
    '20': 20
    '21': 21
    '22': 22
    '23': 23
    '24': 24
    '25': 25
    '26': 26
    '27': 27
    '28': 28
    '29': 29
    '30': 30
    '31': 31
DoubleNumbers: !dictionary
  types: [ string, double ]
  entries: 
    halb: 0.5
    viertel: 0.25
HolidayNames: !dictionary
  types: [ string, 'string[]' ]
  entries: 
    easterday: [ ostern ]
    fathers: [ vatertag ]
    mothers: [ muttertag ]
    thanksgiving: [ erntedankfest,thanksgiving ]
    martinlutherking: [ martinlutherkingday, martinlutherkingjrday ]
    washingtonsbirthday: [ washingtonsbirthday, washingtonbirthday ]
    canberra: [ canberraday ]
    labour: [ tag der arbeit ]
    columbus: [ columbusday ]
    memorial: [ memorialday ]
    yuandan: [ yuandan ]
    maosbirthday: [ maosbirthday ]
    teachersday: [ teachersday, teacherday ]
    singleday: [ singleday ]
    allsaintsday: [ allerheiligen ]
    youthday: [ tag der jugend ]
    childrenday: [ kindertag ]
    femaleday: [ frauentag ]
    treeplantingday: [ treeplantingday ]
    arborday: [ tag des baumes ]
    girlsday: [ girlsday ]
    whiteloverday: [ whiteloverday ]
    loverday: [ loverday ]
    christmas: [ weihnachten, weihnachtstag ]
    xmas: [ xmas ]
    newyear: [ neujahr ]
    newyearday: [ neujahrstag ]
    newyearsday: [ neujahrstag ]
    inaugurationday: [ inaugurationday ]
    groundhougday: [ Murmeltiertag ]
    valentinesday: [ valentinstag ]
    stpatrickday: [ stpatrickday ]
    aprilfools: [ erster april, aprilscherz ]
    stgeorgeday: [ georgstag ]
    mayday: [ mayday ]
    cincodemayoday: [ cinco de mayo ]
    baptisteday: [ geburt johannes des täufers ]
    usindependenceday: [ us unabhängigkeitstag ]
    independenceday: [ unabhängigkeitstag ]
    bastilleday: [ sturm auf die bastille ]
    halloweenday: [ halloween ]
    allhallowday: [ allerheiligen ]
    allsoulsday: [ allerseelen ]
    guyfawkesday: [ guy fawkes day, guy fawkes night ]
    veteransday: [ veterans day ]
    christmaseve: [ heiligabend ]
    newyeareve: [ silvester ]
WrittenDecades: !dictionary
  types: [ string, int ]
  entries:
    'hundert': 0
    'zehn': 10
    'zwanziger': 20
    'dreißiger': 30
    'vierziger': 40
    'fünfziger': 50
    'sechziger': 60
    'siebziger': 70
    'achtziger': 80
    'neunziger': 90
    'zwanzigern': 20
    'dreißigern': 30
    'vierzigern': 40
    'fünfzigern': 50
    'sechzigern': 60
    'siebzigern': 70
    'achtzigern': 80
    'neunzigern': 90
SpecialDecadeCases: !dictionary
  types: [ string, int ]
  entries:
    'zweitausender': 2000
...
